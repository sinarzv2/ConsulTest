version: '3.4'

networks:
  my-network:
    driver: bridge

volumes:
  sql-data: 

services:
  db:
    container_name: 'sqlserver'
    image: "mcr.microsoft.com/mssql/server"
    environment:
       SA_PASSWORD: "Sina_Razavi123"
       ACCEPT_EULA: "Y"
    ports:
      - 1433:1433
    volumes:
      - sql-data:/var/lib/sqlserver/data
    networks:
      - my-network

  consul:
    image: "consul"
    container_name: consul
    ports:
      - 8500:8500
    networks:
      - my-network

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    container_name: api-gateway
    build: 
      context: .
      dockerfile: APIGateway/Dockerfile   
    ports:
      - 9000:80
      - 9001:443
    networks:
      - my-network
    depends_on:
      - consul

  authservice:
    image: ${DOCKER_REGISTRY-}authservice
    container_name: 'auth-service'
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    ports:
      - 5000:80
      - 5001:443
    networks:
      - my-network
    depends_on:
      - consul
      - db

  customersapiservices:
    image: ${DOCKER_REGISTRY-}customersapiservices
    container_name: 'customer-service'
    build:
      context: .
      dockerfile: CustomersAPIServices/Dockerfile
    ports:
      - 1000:80
      - 1001:443
    networks:
      - my-network
    depends_on:
      - consul

  productsapiservices:
    image: ${DOCKER_REGISTRY-}productsapiservices
    container_name: 'product-service1'
    build:
      context: .
      dockerfile: ProductsAPIServices/Dockerfile
    ports:
      - 2000:80
      - 2001:443
    networks:
      - my-network
    depends_on:
      - consul

  productsapiservices2:
    image: ${DOCKER_REGISTRY-}productsapiservices2
    container_name: 'product-service2'
    build:
      context: .
      dockerfile: ProductsAPIServices2/Dockerfile
    ports:
      - 2010:80
      - 2011:443
    networks:
      - my-network
    depends_on:
      - consul
